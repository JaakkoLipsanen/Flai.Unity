//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;

namespace Flai
{
    public static class PhysicsHelper
    {
        #region IsOnGround

        private const float DefaultMaxGroundDistance = 0.01f;
        public static bool IsOnGround(GameObject gameObject)
        {
            return PhysicsHelper.IsOnGround(gameObject, PhysicsHelper.DefaultMaxGroundDistance);
        }

        public static bool IsOnGround(GameObject gameObject, float maxGroundDistance)
        {
            RaycastHit hit;
            return PhysicsHelper.IsOnGround(gameObject, maxGroundDistance, out hit);
        }

        public static bool IsOnGround(GameObject gameObject, float maxGroundDistance, out GameObject hittedGameObject)
        {
            RaycastHit hit;
            if (PhysicsHelper.IsOnGround(gameObject, maxGroundDistance, out hit))
            {
                hittedGameObject = hit.collider.gameObject;
                return true;
            }

            hittedGameObject = null;
            return false;
        }

        public static bool IsOnGround(GameObject gameObject, float maxGroundDistance, out RaycastHit hit)
        {
            if (Physics.Raycast(new Ray(gameObject.transform.position - Vector3.one * (gameObject.transform.localScale.y / 2f - 0.01f), Vector3.down), out hit, maxGroundDistance))
            {
                return true;
            }

            return false;
        }

        #endregion

        public static float CalculateJumpVelocity(float targetJumpHeight, float gravity)
        {
            return FlaiMath.Sqrt(targetJumpHeight * 2 * -gravity);
        }
    }
}
